

.. _sphx_glr_gallery_pylab_examples_boxplot_demo.py:


============
Boxplot Demo
============





.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /gallery/pylab_examples/images/sphx_glr_boxplot_demo_001.png
            :scale: 47

    *

      .. image:: /gallery/pylab_examples/images/sphx_glr_boxplot_demo_002.png
            :scale: 47

    *

      .. image:: /gallery/pylab_examples/images/sphx_glr_boxplot_demo_003.png
            :scale: 47

    *

      .. image:: /gallery/pylab_examples/images/sphx_glr_boxplot_demo_004.png
            :scale: 47

    *

      .. image:: /gallery/pylab_examples/images/sphx_glr_boxplot_demo_005.png
            :scale: 47

    *

      .. image:: /gallery/pylab_examples/images/sphx_glr_boxplot_demo_006.png
            :scale: 47

    *

      .. image:: /gallery/pylab_examples/images/sphx_glr_boxplot_demo_007.png
            :scale: 47





.. code-block:: python

    import matplotlib.pyplot as plt
    import numpy as np

    # Fixing random state for reproducibility
    np.random.seed(19680801)

    # fake up some data
    spread = np.random.rand(50) * 100
    center = np.ones(25) * 50
    flier_high = np.random.rand(10) * 100 + 100
    flier_low = np.random.rand(10) * -100
    data = np.concatenate((spread, center, flier_high, flier_low), 0)

    # basic plot
    plt.boxplot(data)

    # notched plot
    plt.figure()
    plt.boxplot(data, 1)

    # change outlier point symbols
    plt.figure()
    plt.boxplot(data, 0, 'gD')

    # don't show outlier points
    plt.figure()
    plt.boxplot(data, 0, '')

    # horizontal boxes
    plt.figure()
    plt.boxplot(data, 0, 'rs', 0)

    # change whisker length
    plt.figure()
    plt.boxplot(data, 0, 'rs', 0, 0.75)

    # fake up some more data
    spread = np.random.rand(50) * 100
    center = np.ones(25) * 40
    flier_high = np.random.rand(10) * 100 + 100
    flier_low = np.random.rand(10) * -100
    d2 = np.concatenate((spread, center, flier_high, flier_low), 0)
    data.shape = (-1, 1)
    d2.shape = (-1, 1)
    # data = concatenate( (data, d2), 1 )
    # Making a 2-D array only works if all the columns are the
    # same length.  If they are not, then use a list instead.
    # This is actually more efficient because boxplot converts
    # a 2-D array into a list of vectors internally anyway.
    data = [data, d2, d2[::2, 0]]
    # multiple box plots on one figure
    plt.figure()
    plt.boxplot(data)

    plt.show()

**Total running time of the script:** ( 0 minutes  0.555 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: boxplot_demo.py <boxplot_demo.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: boxplot_demo.ipynb <boxplot_demo.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
