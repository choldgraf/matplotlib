

.. _sphx_glr_gallery_pylab_examples_axis_equal_demo.py:


===============
Axis Equal Demo
===============

This example is only interesting when run in interactive mode.





.. image:: /gallery/pylab_examples/images/sphx_glr_axis_equal_demo_001.png
    :align: center





.. code-block:: python



    import matplotlib.pyplot as plt
    import numpy as np

    # Plot circle or radius 3

    an = np.linspace(0, 2*np.pi, 100)

    plt.subplot(221)
    plt.plot(3*np.cos(an), 3*np.sin(an))
    plt.title('not equal, looks like ellipse', fontsize=10)

    plt.subplot(222)
    plt.plot(3*np.cos(an), 3*np.sin(an))
    plt.axis('equal')
    plt.title('equal, looks like circle', fontsize=10)

    plt.subplot(223)
    plt.plot(3*np.cos(an), 3*np.sin(an))
    plt.axis('equal')
    plt.axis([-3, 3, -3, 3])
    plt.title('looks like circle, even after changing limits', fontsize=10)

    plt.subplot(224)
    plt.plot(3*np.cos(an), 3*np.sin(an))
    plt.axis('equal')
    plt.axis([-3, 3, -3, 3])
    plt.plot([0, 4], [0, 4])
    plt.title('still equal after adding line', fontsize=10)

    plt.tight_layout()

    plt.show()

**Total running time of the script:** ( 0 minutes  0.329 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: axis_equal_demo.py <axis_equal_demo.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: axis_equal_demo.ipynb <axis_equal_demo.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
